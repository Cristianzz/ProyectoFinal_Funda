<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAABEwAAAKKCAYAAAAnYM4pAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAACB+SURBVHhe7d09iyzbeYZh/cEDBgXCRgjLICEENjIKrUwociBwZJQptBKDwIlRpNChMv+abd4D
        Zdd5vOpzrequ6n1dcIPRmen56jKznu6e/b1f/vm/v0iSJEmSJOn/MphIkiRJkiRFBhNJkiRJkqTIYCJJ
        kiRJkhQZTCRJkiRJkiKDiSRJkiRJUmQwkSRJkiRJigwmkiRJkiRJkcFEkiRJkiQpMphIkiRJkiRFBhNJ
        kiRJkqTIYCJJkiRJkhQZTCRJkiRJkiKDiSRJkiRJUmQwkSRJkiRJigwmkiRJkiRJkcFEkiRJkiQpMphI
        kiRJkiRFBhNJkiRJkqTIYCJJkiRJkhQZTCRJkiRJkiKDiSRJkiRJUmQwkSRJkiRJim43mPzs93/88nf/
        8vtv++abb5r94Of/+L9v8w//8V/N25G0netNkiRJktrdYjD5+b/955cf/fq3zcPa3v72n//12wPddJt1
        EKz/bfpvf//vf/7Ox5S+1lxvkiRJkrTdWweTOmTVo9d5GLuq+QFP+tpyvUmSJEnS/t4ymPziT3/58sNf
        /aZ5yLq6n/7uD83PSfrUXG+SJEmSdLyXDyb1coC/+sHfNA9Xr8rLBfS15HqTJEmSpHO9dDCpR5tbB6pX
        9/0f/6T5+UmflOtNkiRJks73ssHkLoe3KX9fQZ/cJ19v9S/1/PUv/+n/fYwaZurlR633kSRJkqSjvWQw
        qZcF5OHm3dXLFByu9Il98vU2/Us8S3n5jyRJkqRRXT6Y1CGpHvltHW7enWeZ6NP61Out/oWfPV9XjUWt
        95ckSZKko10+mGw9Iry3OizlgaseTa7/7ewftax/YnV+e9LT+7TrrV5+c+Rf+DGYSJIkSRrVpYNJPdrd
        OtQcrQ5vW0/nr7/ZcOYg17ot6Yl92vVW40zrNtYymEiSJEka1aWDyZkDT6t8pHupOuS1/hjkWvUIduu2
        pKf1KddbjR71bJTW+29lMJEkSZI0qksHk7OHnqwezW7d/lI/+vVvm7fTymCiT+np11sNMEduq5XBRJIk
        SdKoLhtMRr08oNr7iPe8vY+2b730QHpCT7/eRv0zyGc+d0mSJElqddlgUn8gsnWgOVP9rYQz/1zo1iGu
        Xk7Qer+l6lBXtzm19K92nPl86yA5v+2lZwvU53zme9GqHu2fPt7SSyvWHrGv/1bv2/qjnHV79d9e8Qye
        +fdu6e9qTH/EtGrdxsimj9P6vtTPdW2kq/fLn0W9z9bn/dTrrT7OqGfG7O3s15fNr5+1r2G6FrZ+hiOb
        Pt4r74NHuts1K0mSJLW6bDCpw3Trl+Cz1S/V9U+Ltj7WWvU+S7e3dpifxpE8OOytXlrQut2paWw4c/v1
        ua8deJaaDilH/tWR1iG3bmPpkNOqPt4Vw0l9HmcP2/V1nbk/tarP48i/TlNvn7dR94et72kdIJcO+k+8
        3npfftNT62ewp/r+1/u2bnNvdT2Muu9N3eE+uKf6uHe4ZiVJkqQ9PWYwmTrzSGf9gj8fJur/Xvqlv/cw
        NLU0mIy6/b1/Z2I64C09G2ar+n5Pt1WHlSNDSTbqsFNfe8/nMa++vqMHwGl4Onvwq4Pt/PaOvhyl9fk+
        6Xqr4WTUz+9sW4NmVt/f+dc0ovre1u22Pt5Wd7wPrvXua1aSJEk60+MGk3nTU7ZH/fJ85BHarVoHsrOH
        m1Zbh9j672dHkqxua9RhcevzXqsO2iO/h/P2fF51SB3xrIh6hsF0m3Xfbb3NWvU9mH9e1ZOut7qN1u2/
        sr2DSd3njjwj60xHxps73wdbvfualSRJknp6xB993Vv9An32WQz1i33rNs+Wh6Cjj+ButXRYqIPzux+9
        36q+F63Pfa36ubZua2RrB9eRz4qo26nbrGvk7KiV9/MnXW9PGUxecZ+bqlGhfoatz2Pq7vfB7N3XrCRJ
        ktTbZYNJddUji3uqQ9mRR8JHP0Kfv8iPPiS2BpM6/Nx9LJk68rMZPTattXQAG/1yjHqEv+cZQPNnCEw9
        5Xq7w2CSL0nJRj7bbG91f6hRpPX5VE+4D07d4ZqVJEmSert0MHnHoSPLv5+w1OixIX+JHz3ItAaTV7ws
        Y1R1UMvPv9XRR6nrZzh/5Lu+J0eHhNb3tudgeUWt799Trrc73E9bP+OpunZb7/OK1p5p8oT7YHWXa1aS
        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
        AAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQA
        AAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAA
        AILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAg
        GEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILB
        BAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwA
        AAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAA
        ACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAA
        gsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAY
        TAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEE
        AAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAA
        AACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAA
        IBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACC
        wQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhM
        AAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQA
        AAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAA
        AILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAg
        GEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILB
        BAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwA
        AAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAA
        ACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAA
        gsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAY
        TAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEE
        AAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAA
        AACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAA
        IBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACC
        wQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhM
        AAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQA
        AAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAA
        AILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAg
        GEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILB
        BAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwA
        AAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAA
        ACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAA
        gsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAY
        TAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEE
        AAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAA
        AACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAA
        IBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACC
        wQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhM
        AAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQA
        AAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAA
        AILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAg
        GEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILB
        BAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwA
        AAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAA
        ACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAA
        gsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAY
        TAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEE
        AAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAA
        AACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAA
        IBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACC
        wQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhM
        AAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQA
        AAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAA
        AILBBAAAACAYTAAAAACCwQQAAAAgGEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAAAg
        GEwAAAAAgsEEAAAAIBhMAAAAAILBBAAAACAYTAAAAACCwQQAAADgO758+R8xw/S0NN3fwQAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>